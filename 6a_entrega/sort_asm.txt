parametros nos regs:
    addi    x10, x0, 0 // 000000000000 00000 000 01010 0010011 endere√ßo inicial dos dados
    addi    x11, x0, 10 // 000000001010 00000 000 01011 0010011 tamanho do vetor = 10
sort:    
    addi    sp, sp, -20  // 111111101100 00010 000 00010 0010011
    sw      x1,16(sp)    // 0000000 00001 00010 010 10000 0100011
    sw      x22,12(sp)   // 0000000 10110 00010 010 01100 0100011
    sw      x21,8(sp)    // 0000000 10101 00010 010 01000 0100011
    sw      x20,4(sp)    // 0000000 10100 00010 010 00100 0100011
    sw      x19,0(sp)     // 0000000 10011 00010 010 00000 0100011
# move parameters
    addi    x21, x10, 0  // 000000000000 01010 000 10101 0010011
    addi    x22, x11, 10  // 000000000000 01011 000 10110 0010011
# outer loop
    addi    x19, x0, 0   // 000000000000 00000 000 10011 0010011
for1tst:    
    blt     x19, x22, continue // 0000000 10110 10011 100 10000 1100011
    jal     x0, exit1 // 00001000000000000000 00000 1101111 
continue:
# inner loop
    addi    x20, x19, -1 // 111111111111 10011 000 10100 0010011
for2tst:
    blt     x20, x0, exit2 // 0000011 00000 10100 100 00000 1100011
    slli    x5, x20, 2  // 000000000010 10100 001 00101 0010011
    add     x5, x21, x5 // 0000000 00101 10101 000 00101 0110011
    lw      x6, 0(x5) // 000000000000 00101 010 00110 0000011
    lw      x7, 4(x5) // 000000000100 00101 010 00111 0000011
    blt     x6, x7, exit2 // 0000001 00111 00110 100 11000 1100011 
    beq     x6, x7, exit2 // 0000001    00111 00110 000 10000 1100011 0000001 10000
# pass parameters and call
    addi    x10,x21,0  // 000000000000 10101 000 01010 0010011 
    addi    x11,x20,0  // 000000000000 10100 000 01011 0010011 
    jal     x1, swap   // 00000110000000000000 00001 1101111 00000110000000000000
# inner loop
    addi    x20, x20, -1      # j = j - 1 // 111111111111 10100 000 10100 0010011
    jal     x0, for2tst // 11111010100111111111 00001 1101111 
# outer loop
exit2:
    addi    x19, x19, 1       # i = i + 1 // 000000000001 10011 000 10011 0010011
    jal     x0, for1tst // 11111000000111111111 00001 1101111  
# restoring registers
exit1:
    lw      x19, 0(sp) // 000000000000 00010 010 10011 0000011
    lw      x20, 4(sp) // 000000000100 00010 010 10100 0000011
    lw      x21, 8(sp) // 000000001000 00010 010 10101 0000011
    lw      x22, 12(sp) // 000000001100 00010 010 10110 0000011
    lw      x1, 16(sp) // 000000010000 00010 010 00001 0000011
    addi    sp, sp, 20 // 000000010100 00010 000 00010 0010011
# procedure return
    halt    x0, 0(x1) // 000000000000 00001 000 00000 1100111
# swap
swap:
    slli    x6, x11, 2 // 000000000010 01011 001 00110 0010011
    add     x6, x10, x6 // 0000000 00110 01010 000 00110 0110011
    lw      x5, 0(x6) // 000000000000 00110 010 00101 0000011
    lw      x7, 4(x6) // 000000000100 00110 010 00111 0000011
    sw      x7,0(x6) // 0000000 00111 00110 010 00000 0100011
    sw      x5,4(x6) // 0000000 00101 00110 010 00100 0100011
    jalr    x0, 0(x1) // 000000000000 00001 000 00000 1100111
